---
import BaseLayout from "@/layouts/BaseLayout.astro";
import FullScreenRow from "@/components/rows/FullScreenRow.astro";
import Nephex4 from "@/assets/images/nephex-4.png";
import Nephex5 from "@/assets/images/nephex-5.png";
import Nephex6 from "@/assets/images/nephex-6.png";
import { Image } from "astro:assets";
import { getEntry } from "astro:content";
import BentoGrid from "@/components/sections/BentoGrid.astro";

const { data } = await getEntry("pages", "homepage");
const {
  bentos,
  subtitle,
  about_text,
  what_we_dos,
  meta_title,
  meta_description,
  scroll_speeds,
  blobs: blobsData,
  furries,
} = data;

const blobFiles: any[] = [];
for (const blob of blobsData) {
  const src = blob.src.replace("../", "");
  blobFiles.push(await import(src));
}

const blobs = blobsData.map((blob: any, index: number) => ({
  ...blob,
  file: blobFiles[index].default,
}));
console.log(blobs);
---

<BaseLayout title={meta_title} description={meta_description}>
  <FullScreenRow
    rowClass="bg-[radial-gradient(ellipse_at_left_top,rgba(60,28,49,1)_0%,rgba(0,0,0,0)_50%)] relative z-30"
    containerClass="max-w-6xl"
  >
    <div
      class="max-w-sm sm:max-w-md md:max-w-2xl mr-auto mt-16 z-40"
      data-scroll
      data-scroll-repeat
      data-scroll-speed={scroll_speeds.hero}
    >
      <h2 class="drop-shadow-custom">
        <div class="text-4xl sm:text-6xl lg:text-8xl uppercase font-bold">
          Calling all
        </div>
        <div
          class="text-7xl sm:text-8xl md:text-9xl lg:text-[10rem] uppercase font-black
    bg-[linear-gradient(97deg,#FF5C00_-13.38%,#F06_57.93%,#FFBA00_79.2%)] inline-block text-transparent bg-clip-text"
        >
          curious minds
        </div>
      </h2>
      <p
        class="max-w-full md:max-w-lg text-lg sm:text-2xl md:text-3xl font-bold"
      >
        {subtitle}
      </p>
    </div>
    <div class:list={[furries.hero.class]}>
      <Image
        src={furries.hero.src}
        alt=""
        class="brightness-[0.9]"
        data-scroll-id="nephex-hero"
        data-scroll
        data-scroll-speed={furries.hero.scroll_speed}
        data-scroll-direction="horizontal"
      />
    </div>
  </FullScreenRow>
  <section
    class="mt-16 flex flex-col items-center md:flex-row-reverse md:items-stretch w-full max-w-6xl px-6 md:px-10 mx-auto gap-4 bg-transparent z-30 relative"
    id="about-text-target"
  >
    <div class="flex flex-col gap-4 w-full md:w-1/2 max-w-full">
      <article
        class="flex flex-col justify-start items-start rounded-xl
        z-50 gap-4"
        id="about"
        data-scroll
        data-scroll-sticky
        data-scroll-speed={scroll_speeds.about_text}
        data-scroll-repeat
        data-scroll-offset="-25%,25%"
        data-scroll-target="#about-text-target"
      >
        <h2 class="text-4xl xs:text-5xl lg:text-7xl font-bold uppercase mb-4">
          {about_text}
        </h2>
        <button
          class="hidden md:block bg-zinc-300 bg-opacity-0 rounded-2xl border-8 border-white font-heading font-bold text-3xl uppercase py-1 px-12"
          >See more</button
        >
      </article>
    </div>
    <div class="block z-50 w-full md:w-1/2">
      <div
        id="bento"
        data-scroll
        data-scroll-speed={scroll_speeds.bento}
        data-scroll-sticky
        data-scroll-repeat
        data-scroll-target="#about-text-target"
      >
        <BentoGrid>
          {
            bentos.map(({ src, alt, class: customClass }) => (
              <Image
                src={src}
                alt={alt}
                class:list={[customClass, `w-full h-full rounded-xl`]}
              />
            ))
          }
        </BentoGrid>
      </div>
    </div>
    <button
      class="block md:hidden bg-zinc-300 bg-opacity-0 rounded-2xl border-8 border-white font-heading font-bold text-3xl uppercase mt-8 py-1 px-12"
      >See more</button
    >
  </section>
  <section
    class="mt-96 md:mt-[36rem] mb-36 w-full max-w-6xl px-6 md:px-10 mx-auto gap-4 bg-transparent z-20 relative"
  >
    <h2
      class="text-white text-8xl md:text-9xl font-heading uppercase max-w-sm sm:max-w-full mb-8 font-black"
    >
      What we do
    </h2>
    <div
      class="relative w-full block md:grid md:grid-cols-2 place-items-stretch"
    >
      <aside class="relative hidden md:block mb-12 mr-8">
        {
          what_we_dos.map(
            (
              { title, text, image: { src, alt, class: imageClass } },
              index
            ) => (
              <Image
                src={src}
                alt={alt}
                data-hover-index={index}
                data-hovered={index === 0}
                class:list={[
                  `object-cover h-full rounded-xl hidden md:block absolute transition-opacity duration-500 md:data-[hovered]:opacity-100 opacity-0`,
                  imageClass,
                ]}
              />
            )
          )
        }
      </aside>
      <div class="">
        {
          what_we_dos.map(
            (
              { title, text, image: { src, alt, class: imageClass } },
              index
            ) => (
              <article
                class="mb-12 pointer-events-auto cursor-pointer origin-left group"
                data-hover-target={index}
              >
                <h3
                  class="text-4xl xs:text-5xl sm:text-6xl lg:text-7xl font-heading font-bold inline-block font-body uppercase 
                  bg-[linear-gradient(96deg,#FF401F_16.97%,#F06_70.59%)] text-transparent bg-clip-text
                  md:bg-none md:text-white md:bg-clip-[unset]
                  md:data-[hovered]:bg-[linear-gradient(96deg,#FF401F_16.97%,#F06_70.59%)]
                  md:data-[hovered]:text-transparent 
                  md:data-[hovered]:bg-clip-text"
                  data-hover-index={index}
                  data-hovered={index === 0}
                >
                  {title}
                </h3>
                <p class="text-lg xs:text-xl md:text-2xl mb-8">{text}</p>
                <Image
                  src={src}
                  alt={alt}
                  class:list={[
                    `md:hidden w-full object-cover rounded-xl aspect-square block rounded-xl`,
                    imageClass,
                  ]}
                />
              </article>
            )
          )
        }
      </div>
      <div class:list={[furries.what_we_do.class]}>
        <Image
          src={furries.what_we_do.src}
          alt=""
          class="brightness-[0.9]"
          data-scroll-id="nephex-about"
          data-scroll
          data-scroll-speed={furries.what_we_do.scroll_speed}
          data-scroll-direction="horizontal"
        />
      </div>
    </div>
  </section>
  <div>
    {
      blobs.map((blob: any) => (
        <div
          class:list={["absolute", blob.class]}
          data-scroll
          data-scroll-speed={blob.scroll_speed}
          data-scroll-position="top"
          data-scroll-direction="horizontal"
          data-scroll-target="#page"
        >
          <Fragment set:html={blob.file} />
        </div>
      ))
    }
  </div>
  <div class:list={[furries.footer.class]}>
    <Image
      src={furries.footer.src}
      alt=""
      class="brightness-[0.9] overflow-hidden"
      data-scroll-id="nephex-footer"
      data-scroll
      data-scroll-speed={furries.footer.scroll_speed}
      data-scroll-position="bottom"
      data-scroll-direction="vertical"
    />
  </div>
</BaseLayout>

<script>
  import scroller from "../lib/scroller";

  scroller.on("scroll", (args: any) => {
    // do something
    const nephexHero = args.currentElements["nephex-hero"];
    const nephexAbout = args.currentElements["nephex-about"];
    if (typeof nephexHero === "object") {
      let progress = nephexHero.progress;
      nephexHero.el.style.rotate = `${(progress - 0.5) * 0.1}turn`;
    }
    if (typeof nephexAbout === "object") {
      let progress = nephexAbout.progress;
      nephexAbout.el.style.rotate = `${(progress - 0.5) * 0.1}turn`;
    }
  });
</script>
<script>
  const hoverItems = document.querySelectorAll("[data-hover-index]");
  const hoverTargets = document.querySelectorAll("[data-hover-target]");

  let slideIndex = 0;

  const createTimer = () => {
    return setInterval(() => {
      if (slideIndex >= hoverTargets.length) {
        slideIndex = 0;
      }
      toggleHoverIndex(`${slideIndex}`);
      slideIndex += 1;
    }, 5000);
  };
  let timer = createTimer();

  const elementArray = [...hoverItems];
  const toggleHoverIndex = (index: string) => {
    const show = elementArray.filter(
      (el) => el.getAttribute("data-hover-index") === index
    );

    show.forEach((el) => {
      el.toggleAttribute("data-hovered", true);
    });

    const hide = elementArray.filter(
      (el) => el.getAttribute("data-hover-index") !== index
    );
    hide.forEach((el) => {
      el.toggleAttribute("data-hovered", false);
    });
  };

  const hoverListener = (event: any) => {
    const index = event.target.dataset.hoverTarget;
    clearInterval(timer);
    toggleHoverIndex(index);
    slideIndex = Number(index);
    timer = createTimer();
  };

  hoverTargets.forEach((textEl) => {
    textEl.addEventListener("mouseenter", hoverListener);
  });
</script>
